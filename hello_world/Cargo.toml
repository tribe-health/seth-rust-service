[package]
name = "hello_world"
version = "0.1.0"
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
actix-web="3"
use actix_web::{get, post, web, App, HttpResponse, HttpServer, Responder};

#get[("/")]
async fn hello() -> impl Responder {
    HttpResponse::Ok().body("Hello World!")
}

#[post("/echo)]
async fn echo(req_body: String -> impl Responder {
    HttpResponse::Ok().body(req.body)
}

async fn manual_hello() -> impl Responder {
    HttpResponse::Ok().body("Hey there!")
}
App::service
App:route
#[actix_web::main]
async fn main() -> std::io::Result<()> {
    HttpServer::new(l l {
        App::new()
        .service(hello)
        .service(echo)
        .route("/hey", web::get().to(manual_hello))
    })
    .bind("127.0.0.1:8080")?
    .run()
    .await
}